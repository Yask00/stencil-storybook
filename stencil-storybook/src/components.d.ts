/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface ButtonWrapper {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface MyButton {
        "passedClick"?: () => void;
        "type": string;
    }
}
declare global {
    interface HTMLButtonWrapperElement extends Components.ButtonWrapper, HTMLStencilElement {
    }
    var HTMLButtonWrapperElement: {
        prototype: HTMLButtonWrapperElement;
        new (): HTMLButtonWrapperElement;
    };
    interface HTMLMyButtonElement extends Components.MyButton, HTMLStencilElement {
    }
    var HTMLMyButtonElement: {
        prototype: HTMLMyButtonElement;
        new (): HTMLMyButtonElement;
    };
    interface HTMLElementTagNameMap {
        "button-wrapper": HTMLButtonWrapperElement;
        "my-button": HTMLMyButtonElement;
    }
}
declare namespace LocalJSX {
    interface ButtonWrapper {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface MyButton {
        "passedClick"?: () => void;
        "type"?: string;
    }
    interface IntrinsicElements {
        "button-wrapper": ButtonWrapper;
        "my-button": MyButton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "button-wrapper": LocalJSX.ButtonWrapper & JSXBase.HTMLAttributes<HTMLButtonWrapperElement>;
            "my-button": LocalJSX.MyButton & JSXBase.HTMLAttributes<HTMLMyButtonElement>;
        }
    }
}
